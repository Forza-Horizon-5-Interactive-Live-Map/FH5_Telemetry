name: CI/CD for API

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  dockerTag: latest

jobs:

  dockerize_app:
    name: Setup Agent > Restor App > Build App > Publish App > Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: DockerHub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
              
      - name: Setup dockerTag to Staging
        if: github.ref_name == 'develop'
        run: |
          echo "dockerTag=dev" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0
          
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1

      - name: display current folder
        shell: bash
        run: |
          ls

      - name: Restore Project
        run: dotnet restore ForzaLiveTelemety.csproj
        
      - name: Build Project
        run: dotnet build ForzaLiveTelemety.csproj -c Release --no-restore
        
      - name: Publish Project
        run: dotnet publish ForzaLiveTelemety.csproj -c Release -o out --no-build 

      # - name: Build and push DockerImage
      #   run: docker build --platform linux/arm64  --file ./Dockerfile --tag dercraker0/react-map:dev --push .

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/ARM64,
          tags: ${{secrets.DOCKER_USER}}/forza5-telemetry:dev
        
  # deploy:
    # name: Call portainer to deploy new versions of Docker
    # runs-on: ubuntu-latest
    # needs: dockerize_app
    # steps:
    #   - name: PUT Request Action to update Stack - STAGING
    #     uses: fjogeleit/http-request-action@v1.13.0
    #     with:
    #       url: '${{secrets.PORTAINER_UPDATE_STACK_REACT_MAP_URLAPI}}'
    #       method: 'PUT'
    #       timeout: 20000
    #       customHeaders: '${{secrets.CUSTOM_HEADER}}'
    #       data: '${{ secrets.PORTAINER_UPDATE_STACK_REACT_MAP_DATA}}'
